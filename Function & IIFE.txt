 The code in JavaScript using anonymous function and IIFE:

// Print odd numbers in an array
(function(arr) {
  let odd = arr.filter(x => x % 2 !== 0);
  console.log(odd);
})([1, 2, 3, 4, 5, 6, 7, 8, 9]);

// Convert all the strings to title caps in a string array
(function(arr) {
  let titleCaps = arr.map(x => x[0].toUpperCase() + x.slice(1).toLowerCase());
  console.log(titleCaps);
})(["hello", "world", "this", "is", "a", "test"]);

// Sum of all numbers in an array
(function(arr) {
  let sum = arr.reduce((a, b) => a + b, 0);
  console.log(sum);
})([1, 2, 3, 4, 5]);

// Return all the prime numbers in an array
(function(arr) {
  let isPrime = x => {
    if (x < 2) return false;
    for (let i = 2; i * i <= x; i++) {
      if (x % i === 0) return false;
    }
    return true;
  };
  let prime = arr.filter(x => isPrime(x));
  console.log(prime);
})([2, 3, 4, 5, 6, 7, 8, 9, 10]);

// Return all the palindromes in an array
(function(arr) {
  let isPalindrome = x => {
    let s = x.toString();
    return s === s.split("").reverse().join("");
  };
  let palindrome = arr.filter(x => isPalindrome(x));
  console.log(palindrome);
})([11, 12, 13, 14, 15, 121, 131]);

// Return median of two sorted arrays of the same size
(function(arr1, arr2) {
  let merge = (a1, a2) => {
    let i = 0;
    let j = 0;
    let res = [];
    while (i < a1.length && j < a2.length) {
      if (a1[i] < a2[j]) {
        res.push(a1[i]);
        i++;
      } else {
        res.push(a2[j]);
        j++;
      }
    }
    while (i < a1.length) {
      res.push(a1[i]);
      i++;
    }
    while (j < a2.length) {
      res.push(a2[j]);
      j++;
    }
    return res;
  };
  
let median = arr => {
    let n = arr.length;
    if (n % 2 === 0) {
      return (arr[n / 2 - 1] + arr[n / 2]) / 2;
    } else {
      return arr[Math.floor(n / 2)];
    }
};
  
let merged = merge(arr1, arr2);
let med = median(merged);
console.log(med);
})([1,3,5], [2,4,6]);

// Remove duplicates from an array
(function(arr) {
let unique = [...new Set(arr)];
console.log(unique);
})([1,1,2,3,4,4]);

// Rotate an array by k times
(function(arr,k){
let n=arr.length;
k=k%n; //handle cases when k>n
let rotated=[...arr.slice(n-k),...arr.slice(0,n-k)];
console.log(rotated);
})([1,2,3,4],3);